"""
[ Section 1 ] Multithreading - Difference between Process and Thread
Keywords : Process, Thread
"""
# imports ==============================================================================================================
# ======================================================================================================================
"""  # =================================================================================================================
[ (1) Process ] --------------------------------------------------------------------------------------------------------
    - 운영체제 -> 할당 받는 자원 단위 (실행 중인 프로그램)
    - CPU 동작 시간, 주소 공간 (독립적)
    - Code, Data, Stack, Heap -> 독립적
    - 최소 1개의 main thread 보유
    - 파이프, 파일, 소켓 등을 사용해서 프로세스간 통신 (Cost 높음) -> Context Switching
------------------------------------------------------------------------------------------------------------------------
[ (2) Thread ] ---------------------------------------------------------------------------------------------------------
    - 프로세스 내에 실행 흐름 단위
    - 프로세스 자원 사용
    - Stack 만 별도 할당, 나머지는 공유 (Code, Date, Heap)
    - 메모리 공유 (변수 공유)
    - 한 thread의 결과가 다른 thread 에 영향 끼침
    - 동기화 문제는 정말 주의해야함 (디버깅이 어려움)
------------------------------------------------------------------------------------------------------------------------
[ (3) Multi Thread ] ---------------------------------------------------------------------------------------------------
    - 한 개의 단일 어플리케이션 (응용 프로그램) -> 여러 thread 구성 후 작업 처리
    - 시스템 자원 소모 감소 (효율성), 처리량 증가 (Cost 감소)
    - 통신 부담 감소, 디버깅 어려움, 단일 프로세스에는 효과 미약, 자원 공유 문제 (교착 상태), 프로세스 영향 준다
------------------------------------------------------------------------------------------------------------------------
[ (4) Multi Process ] --------------------------------------------------------------------------------------------------
    - 한 개의 단일 어플리케이션 (응용 프로그램) -> 여러 프로세스 구성 후 작업 처리
    - 한 개의 프로세스 문제 발생은 확산 없음 (프로세스 kill)
    - 캐시 체인지, Cost 비용이 매우 높음 (오버헤드), 복잡한 통신 방식 사용
------------------------------------------------------------------------------------------------------------------------
"""  # =================================================================================================================
