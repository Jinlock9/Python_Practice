"""
Chapter 3 - Python Advanced (3) : Meta Class (1)
Keywords : Class of Class, Type, Meta Class, Custom Meta Class
"""
# imports ==============================================================================================================
# ======================================================================================================================
"""  # =================================================================================================================
[ Meta Class ]
1. 클래스를 만드는 역할 -> 의도하는 방향으로 클래스 커스텀
2. 프레임 워크 작성 시 필수
3. 동적 생성 (type), 커스텀 생성 (type) 함수
4. 커스텀 클래스 -> 검증 클래스 등
5. 엄격한 Class 사용 요구, 메소드 오버라이드 요구
"""  # =================================================================================================================


# Ex 1 =================================================================================================================
# type example
class SampleA:  # Class == Object
    pass


obj1 = SampleA()  # 변수에 할당 및 복사 가능, 새로운 속성, 함수의 인자로 넘기기 가능

"""
obj1 -> SampleA instance
SampleA -> type meta class
type -> type meta class : type 은 자기 자신이 meta
"""
print("Ex 1 > ", obj1.__class__)
print("Ex 1 > ", type(obj1))
print("Ex 1 > ", obj1.__class__ is type(obj1))
# 모든 클래스의 meta, 원형이 되는 것은 type
print("Ex 1 > ", obj1.__class__.__class__)
print("Ex 1 > ", obj1.__class__.__class__ is type(obj1).__class__)
print("Ex 1 > ", type.__class__)
print()
# ======================================================================================================================

# Ex 2 =================================================================================================================
# type meta - proving Ex 1
# int, dict
n = 10
d = {'a': 10, 'b': 20}


class SampleB:
    pass


obj2 = SampleB()

for o in (n, d, obj2):
    print("Ex 2 > {} : {} | meta - {}".format(type(o), type(o) is o.__class__, o.__class__.__class__))

for t in int, float, list, tuple:
    print("Ex 2 > ", type(t))

print("Ex 2 > ", type(type))
# ======================================================================================================================
